type UserMutation {
    save(request: UserRequest!): User
    update(request: UserUpdateRequest): User
    login(request: UserLoginRequest!): JwtTokenResponse
}

type UserQuery {
    findById(id: String!): User
}

type User {
    id: String!
    name: String!
    email: String!
    password: String!
    image: String!
    phone: String!
    address: String!
    saldo: Int!
    point: Int!
    roles: [Role!]!
    lastLocation: LastLocation!
    createdAt: String! # DD/MM/YYYY HH:MM:ss
    createdBy: String!
    updatedAt: String
    updatedBy: String
    deletedAt: String
    deletedBy: String
    isDeleted: Boolean!
}

enum Roles {
    USER
    COURIER
    DEVELOPER
}

input UserRequest {
    name: String!
    email: String!
    password: String!
    image: String!
    phone: String!
    address: String!
    saldo: Int!
    point: Int!
    roles: [Roles!]!
}

type JwtTokenResponse {
    message: String!
    token: String!
}

input UserLoginRequest {
    email: String!
    password: String!
    lat: Float!
    lng: Float!
}

input UserUpdateRequest {
    id: String!
    name: String!
    email: String!
    image: String!
    phone: String!
    address: String!
    saldo: Int!
    point: Int!
    roles: [Roles!]!
    isDeleted: Boolean!
}