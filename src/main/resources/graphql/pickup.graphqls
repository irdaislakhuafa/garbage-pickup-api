type PickupMutation {
    save(request: PickupRequest!): Pickup
    update(request: PickupUpdateRequest!): Pickup
    checkPrice(request: PickupCheckPriceRequest!): PickupCheckPriceRespone
}

type PickupQuery {
    # @start @end is date time with format "dd/MM/yyyy HH:mm:ss"
    findAllByUserIdWithRangeDate(userId: String!, start: String!, end: String!, status: PickupStatus): [Pickup!]
}

type Pickup {
    id: String!
    resi: String!
    user: User!
    courier: User!
    status: PickupStatus!
    weight: Int!
    place: String!
    trashType: TrashType!
    description: String!
    userVoucher: UserVoucher
    price: Int!
    createdAt: String! # DD/MM/YYYY HH:MM:ss
    createdBy: String!
    updatedAt: String
    updatedBy: String
    deletedAt: String
    deletedBy: String
    isDeleted: Boolean!
}

enum PickupStatus {
    COMPLETED
    DELIVERY
    IN_QUEUE
}

input PickupRequest {
    userId: String!
    status: PickupStatus!
    weight: Int!
    place: String!
    trashTypeId: String!
    description: String!
    userVoucherId: String
    lat: Float!
    lng: Float!
}

input PickupUpdateRequest {
    id: String!
    userId: String!
    status: PickupStatus!
    weight: Int!
    place: String!
    trashTypeId: String!
    description: String!
    lat: Float!
    lng: Float!
    isDeleted: Boolean!
}

input PickupCheckPriceRequest {
    weight: Int!
    lat: Float!
    lng: Float!
}

type PickupCheckPriceRespone {
    price: Int!
}