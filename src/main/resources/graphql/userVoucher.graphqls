type UserVoucherQuery {
    findAllByUserIdAndStatus(request: UserVoucherFindAllByUserIdAndStatus!): [UserVoucher!]
}

type UserVoucherMutation {
    exchange(request: UserVoucherExchangeRequest!): [UserVoucher]
}

type UserVoucher {
    id: String!
    user: User!
    voucher: Voucher!
    status: UserVoucherStatus!
    createdAt: String!
    createdBy: String!
    updatedAt: String
    updatedBy: String
    deletedAt: String
    deletedBy: String
    isDeleted: Boolean!
}

enum UserVoucherStatus {
    USED, AVAILABLE, CLAIMED
}

input UserVoucherFindAllByUserIdAndStatus {
    userId: String!
    statuses: [UserVoucherStatus!]!
}

input UserVoucherExchangeRequest {
    userId: String!
    listId: [String!]!
}